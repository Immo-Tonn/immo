// –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π —Ñ–∞–π–ª: immo/BE/src/config/setupIndexes.ts

import mongoose from "mongoose";
import ImagesModel from "../models/ImagesModel";
import RealEstateObjectsModel from "../models/RealEstateObjectsModel";

export const setupDatabaseIndexes = async (): Promise<void> => {
  try {
    console.log("Creating database indexes...");

    // –ò–Ω–¥–µ–∫—Å –¥–ª—è –∫–æ–ª–ª–µ–∫—Ü–∏–∏ images –ø–æ –ø–æ–ª—é realEstateObject
    await ImagesModel.collection.createIndex({ realEstateObject: 1 });
    console.log("‚úÖ Index for images.realEstateObject created");

    // –ò–Ω–¥–µ–∫—Å –¥–ª—è –∫–æ–ª–ª–µ–∫—Ü–∏–∏ realestateobjects –ø–æ –ø–æ–ª—é images
    await RealEstateObjectsModel.collection.createIndex({ images: 1 });
    console.log("‚úÖ Index for realestateobjects.images created");

    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª–µ–∑–Ω—ã–µ –∏–Ω–¥–µ–∫—Å—ã
    
    // –°–æ—Å—Ç–∞–≤–Ω–æ–π –∏–Ω–¥–µ–∫—Å –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –ø–æ –æ–±—ä–µ–∫—Ç—É –∏ —Ç–∏–ø—É
    await ImagesModel.collection.createIndex({ 
      realEstateObject: 1, 
      type: 1 
    });
    console.log("‚úÖ Composite index for images.realEstateObject + type created");

    // –ò–Ω–¥–µ–∫—Å –¥–ª—è –ø–æ–∏—Å–∫–∞ –æ–±—ä–µ–∫—Ç–æ–≤ –ø–æ —Å—Ç–∞—Ç—É—Å—É
    await RealEstateObjectsModel.collection.createIndex({ status: 1 });
    console.log("‚úÖ Index for realestateobjects.status created");

    // –ò–Ω–¥–µ–∫—Å –¥–ª—è –ø–æ–∏—Å–∫–∞ –æ–±—ä–µ–∫—Ç–æ–≤ –ø–æ —Ç–∏–ø—É
    await RealEstateObjectsModel.collection.createIndex({ type: 1 });
    console.log("‚úÖ Index for realestateobjects.type created");

    // –ò–Ω–¥–µ–∫—Å –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ —Ü–µ–Ω–µ
    await RealEstateObjectsModel.collection.createIndex({ price: 1 });
    console.log("‚úÖ Index for realestateobjects.price created–Ω");

    // –ò–Ω–¥–µ–∫—Å –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ –¥–∞—Ç–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
    await RealEstateObjectsModel.collection.createIndex({ dateAdded: -1 });
    console.log("‚úÖ Index for realestateobjects.dateAdded created");

    // –¢–µ–∫—Å—Ç–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ –∑–∞–≥–æ–ª–æ–≤–∫—É –∏ –æ–ø–∏—Å–∞–Ω–∏—é
    await RealEstateObjectsModel.collection.createIndex({
      title: "text",
      description: "text",
      location: "text"
    });
    console.log("‚úÖ Text index for searching has been created");

    console.log("üéâ All indexes successfully created!");

  } catch (error) {
    console.error("‚ùå Error creating indexes:", error);
    throw error;
  }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∏–Ω–¥–µ–∫—Å–æ–≤
export const listExistingIndexes = async (): Promise<void> => {
  try {
    console.log("\nüìã Existing indexes:");
    
    const imagesIndexes = await ImagesModel.collection.listIndexes().toArray();
    console.log("Images collection:", imagesIndexes.map(idx => idx.name));
    
    const objectsIndexes = await RealEstateObjectsModel.collection.listIndexes().toArray();
    console.log("RealEstateObjects collection:", objectsIndexes.map(idx => idx.name));
    
  } catch (error) {
    console.error("Error getting index list:", error);
  }
};